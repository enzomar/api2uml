@startuml
class Paginator {
nextPageSelector
pageNum
}
class action {
}
class fetchrequest {
actions
ignoreHTTPStatusErrCodes
initialCookies
output
> buffer
> file
proxy
{static} type
> base
> chrome
{static} url
waitDelay
}
class field {
{static} attrs
details
filters
{static} name
{static} selector
{static} type
}
class initialCookie {
domain
expirationDate
hostOnly
httpOnly
id
name
path
sameSite
> unspecified
> strict
> lax
> no_restriction
secure
session
storeID
value
}
class parserequest {
commonParent
{static} fields
{static} format
> csv
> json
> jsonl
> excel
> xml
{static} name
paginator
path
request
}
class serprequest {
fields
{static} format
> csv
> json
> jsonl
> excel
> xml
{static} name
pageNum
{static} proxy
{static} type
{static} url
}
class url2pdfrequest {
actions
ignoreHTTPStatusErrCodes
initialCookies
landscape
marginBottom
marginLeft
marginRight
marginTop
output
> buffer
> file
pageRanges
paperSize
> A3
> A4
> A5
> A6
> Letter
> Legal
> Tabloid
printBackground
printHeaderFooter
proxy
scale
{static} url
waitDelay
}
class url2screenshotrequest {
actions
clipSelector
format
> png
> jpeg
fullPage
height
ignoreHTTPStatusErrCodes
initialCookies
offsetx
offsety
output
> buffer
> file
printBackground
proxy
quality
scale
{static} url
waitDelay
width
}
parserequest o-- field
action o-- action
field *-- parserequest
url2pdfrequest o-- initialCookie
url2pdfrequest o-- action
fetchrequest o-- action
fetchrequest o-- initialCookie
parserequest --> Paginator
serprequest o-- field
url2screenshotrequest o-- initialCookie
parserequest --> fetchrequest
url2screenshotrequest o-- action
@enduml
